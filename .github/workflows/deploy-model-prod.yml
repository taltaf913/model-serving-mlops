# This GitHub workflow performs model deployment to production
# The workflow contents are largely the same as deploy-model-staging.yml but
# we split staging and prod model deployment into separate workflows to simplify
# separately tracking and viewing staging and prod model deployments via GitHub UI and API
#
# This workflow is triggered in an automated manner by the model training job (see notebooks/TriggerModelDeploy.py)
# after model training completes, to enable tracking and enforcing manual approval of model deployments in
# CD, if desired.
name: Prod Model Deployment 

on:
  workflow_dispatch:
    inputs:
      modelUri:
        type: string
        description: 'URI of model to deploy, in the format models:/<model-name>/<version-id>'
        required: true

env:
  DATABRICKS_HOST: https://adb-3011150083119087.7.azuredatabricks.net
  NODE_TYPE_ID: Standard_D3_v2

jobs:
  prod:
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.10

      - name: Install local package
        run: pip install .

      - name: Generate AAD Token
        run: ./.github/workflows/scripts/generate-aad-token.sh ${{ secrets.prodAzureSpTenantId }} ${{ secrets.prodAzureSpApplicationId }} ${{ secrets.prodAzureSpClientSecret }}

      - name: Deploy model to MLflow Registry production stage
        env:
          MLFLOW_TRACKING_URI: databricks
        run: |
          echo "Deploy model to production stage in MLflow Registry..."
          pip install mlflow
          python model_serving_mlops/deployment/model_deployment/deploy.py "${{ github.event.inputs.modelUri }}" "prod"
          echo "Success!"

      - name: Databricks Model Serving endpoint
        env:
          MLFLOW_TRACKING_URI: databricks
        run: |
            echo "Setting up Databricks Model Serving Endpoint with production model..."
            python model_serving_mlops/deployment/model_deployment/model_serving.py --config model_serving_mlops/deployment/model_deployment_config.yml --env prod --mode production_deployment  
            echo "Success!"
